  version: 2.1

  orbs:
    #sonarcloud-dotnet: ksmc/sonarcloud-dotnet@0.0.9

  jobs:
    build:
      docker:
        - image: mcr.microsoft.com/dotnet/core/sdk:3.1
      steps:
        - checkout
        - run: dotnet tool install --global dotnet-sonarscanner --version 4.10.0
        - run: echo 'export PATH="$PATH:/root/.dotnet/tools"' >> $BASH_ENV
        - run: echo "deb http://ftp.us.debian.org/debian stretch main contrib non-free" >> /etc/apt/sources.list
        - run: apt update
        - run: apt install -y unzip
        - run: apt install -y openjdk-11-jdk
        - run: apt install -y libc6-dev
        - run: apt install -y libgflags-dev
        - run: apt install -y libsnappy-dev
        - run: apt install -y zlib1g-dev
        - run: apt install -y libbz2-dev
        - run: apt install -y liblz4-dev
        - run: apt install -y libzstd-dev
        - run: set JAVA_HOME /usr/lib/jvm/java-11-openjdk-amd64/
        - run: export JAVA_HOME
        - run: dotnet sonarscanner begin /k:LGouellec_kafka-streams-dotnet /o:kafka-streams-dotnet /d:sonar.login=${SONAR_TOKEN} /d:sonar.host.url=https://sonarcloud.io /d:sonar.cs.opencover.reportsPaths="**\coverage.opencover.xml" /d:sonar.coverage.exclusions="**sample*/*.cs,**test*/*.cs,**Tests*.cs"
        - run: dotnet build
        - run: dotnet test --no-restore --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
        - run: dotnet sonarscanner end /d:sonar.login=${SONAR_TOKEN}

  workflows:
    main:
      jobs:
        - build:
            context: SonarCloud